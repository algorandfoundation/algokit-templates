name: Release

on:
  # Can be called by other workflows
  workflow_call:
    inputs:
      stable:
        description: 'Create stable release (true) or beta release (false)'
        required: false
        default: 'false'
        type: string
    secrets:
      BOT_ID:
        required: true
      BOT_SK:
        required: true
  # Manual trigger always creates stable releases
  workflow_dispatch:

permissions:
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Generate bot token
        uses: actions/create-github-app-token@v1
        id: app_token
        with:
          app-id: ${{ secrets.BOT_ID }}
          private-key: ${{ secrets.BOT_SK }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app_token.outputs.token }}

      - name: Set release type
        run: |
          # Manual dispatch = stable, workflow_call = use input parameter  
          STABLE_RELEASE=${{ github.event_name == 'workflow_dispatch' && 'true' || inputs.stable }}
          echo "STABLE_RELEASE=$STABLE_RELEASE" >> $GITHUB_ENV
        
      # Used for logging. Don't remove.
      - name: Release Info
        run: |
          if [ "${{ env.STABLE_RELEASE }}" = "true" ]; then
            echo "ðŸš€ Creating STABLE release (removing beta suffix)"
            echo "Mode: Manual stable release"
          else
            echo "ðŸ§ª Creating BETA release"
            echo "Mode: Automatic beta release"
          fi
          echo "Current version: $(grep 'version = ' pyproject.toml)"

      - name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@v10.2.0
        with:
          github_token: ${{ steps.app_token.outputs.token }}
          # Now that branch config is removed from pyproject.toml, these parameters work
          prerelease: ${{ env.STABLE_RELEASE != 'true' }}
          prerelease_token: ${{ env.STABLE_RELEASE == 'true' && '' || 'beta' }}

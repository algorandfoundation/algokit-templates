_min_copier_version: "9.1.0"
_subdirectory: "{{ template_type }}"

# Auto-detected project template type (no user questions needed)
template_type:
  type: str
  help: Detected project template type
  default: "{{ template_type | default('unknown') }}"
  when: false

contract_name:
  type: str
  help: Detected contract name
  default: "{{ contract_name | default('hello_world') }}"
  when: false

# Validation
_validate_project:
  type: str
  help: Project validation
  default: "{% if template_type == 'unknown' %}ERROR: Could not detect project type. Make sure you're running this in an AlgoKit project directory.{% else %}valid{% endif %}"
  validator: "{% if 'ERROR' in _validate_project %}{{ _validate_project }}{% endif %}"

# Post-generation tasks to merge configurations
_tasks:
  - name: Merge Python dependencies
    command: |
      if [ "{{ template_type }}" = "python_contract" ]; then
        python {{ _repo_root }}/scripts/merge_pyproject.py --source "{{ _copier_conf.src_path }}" --destination "{{ _copier_conf.dst_path }}"
      fi
    when: "{{ template_type == 'python_contract' }}"
  
  - name: Merge TypeScript dependencies
    command: |
      if [ "{{ template_type }}" = "typescript_contract" ] || [ "{{ template_type }}" = "typescript_frontend" ]; then
        python {{ _repo_root }}/scripts/merge_package_json.py --source "{{ _copier_conf.src_path }}" --destination "{{ _copier_conf.dst_path }}"
      fi
    when: "{{ template_type in ['typescript_contract', 'typescript_frontend'] }}"
  
  - name: Merge AlgoKit configuration
    command: |
      python {{ _repo_root }}/scripts/merge_algokit_toml.py --source "{{ _copier_conf.src_path }}" --destination "{{ _copier_conf.dst_path }}"

# Post-generation message
_message_after:
  type: str
  when: false
  default: |
    âœ… Testing has been successfully added to your project!
    
    {% if template_type == 'python_contract' %}
    To run tests: algokit project run test
    To run with coverage: poetry run pytest --cov
    {% elif template_type == 'typescript_contract' %}
    To run tests: npm test
    To run in watch mode: npm run test:watch
    {% elif template_type == 'typescript_frontend' %}
    To run tests: npm test
    To run in watch mode: npm run test:watch
    {% endif %} 